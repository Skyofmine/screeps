var $jscomp={scope:{},findInternal:function(a,c,b){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(c.call(b,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in b||(b[e]={});b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,b){return $jscomp.findInternal(this,a,b).v}},"es6-impl","es3");var Task=require("task"),TaskCollectEnergy=require("task.collectEnergy"),Pathing=require("pathing"),Pickup=function(a){this.init(a)};Pickup.prototype=Object.create(Task.prototype);Pickup.prototype.constructor=Pickup;Pickup.prototype.init=function(a){Task.call(this);this.type="pickupResource";this.id=a;this.resource=Game.getObjectById(a);this.force=!0};
Pickup.prototype.canAssign=function(a){if(a.spawning||!this.resource||_.sum(a.carry)===a.carryCapacity||this.resource.amount<a.pos.getRangeTo(this.resource)||this.resource.resourceType===RESOURCE_ENERGY&&50>this.resource.amount)return!1;Task.prototype.assign.call(this,a);return!0};
Pickup.prototype.run=function(a){if(!this.resource||_.sum(a.carry)===a.carryCapacity||this.resource.amount<a.pos.getRangeTo(this.resource))Task.prototype.complete.call(this,a);else if(Pathing.moveTo(a,this.resource,1),a.pickup(this.resource)===OK){Task.prototype.complete.call(this,a);var c=_.filter(a.room.lookForAt(LOOK_STRUCTURES,this.resource),function(a){return a instanceof StructureContainer&&a.store[RESOURCE_ENERGY]});0<c.length&&(new TaskCollectEnergy(c[0].id)).canAssign(a)}};
Pickup.fromObj=function(a){return new Pickup(a.memory.currentTask.id)};Pickup.prototype.toObj=function(a){this.resource?a.memory.currentTask={type:this.type,id:this.resource.id}:delete a.memory.currentTask};Pickup.getTasks=function(a){return _.map(a.find(FIND_DROPPED_RESOURCES).sort(function(a,b){return b.amount-a.amount}),function(a){return new Pickup(a.id)})};require("screeps-profiler").registerObject(Pickup,"TaskPickupResource");module.exports=Pickup;