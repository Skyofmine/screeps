var Cache=require("cache"),Commands={setRoomType:function(a,b){void 0===b?delete Memory.rooms[a].roomType:(Memory.rooms[a]||(Memory.rooms[a]={}),Memory.rooms[a].roomType=b)},claimRoom:function(a,b,c){Memory.maxCreeps.claimer||(Memory.maxCreeps.claimer={});Memory.maxCreeps.claimer[a]||(Memory.maxCreeps.claimer[a]={});c?Memory.maxCreeps.claimer[a][b]=!0:delete Memory.maxCreeps.claimer[a][b]},claimMine:function(a){Game.rooms[a]&&Cache.creeps[a]&&_.forEach(Cache.creeps[a].remoteReserver,function(b){b.claimController(Game.rooms[a].controller)})},
dismantle:function(a,b,c){Memory.dismantle||(Memory.dismantle={});Memory.dismantle[c]||(Memory.dismantle[c]=[]);Memory.dismantle[c].push({x:a,y:b})},stopCreep:function(a){Game.creeps[a]&&(Game.creeps[a].memory.stop=!0)},startCreep:function(a){Game.creeps[a]&&delete Game.creeps[a].memory.stop},startAllCreeps:function(){_.forEach(Game.creeps,function(a){delete a.memory.stop})},setContainerSource:function(a,b){Memory.containerSource[a]=b},addAlly:function(a){Memory.allies||(Memory.allies=[]);Memory.allies.push(a)},
removeAlly:function(a){_.pull(Memory.allies,a)},createArmy:function(a,b){void 0===b?delete Memory.army[a]:(Memory.army[a]=b,Memory.army[a].directive="preparing")},avoidRoom:function(a,b){b&&-1===Memory.avoidRooms.indexOf(a)&&Memory.avoidRooms.push(a);b||_.remove(Memory.avoidRooms,function(b){return b===a})},avoidSquare:function(a,b,c,d){d&&(Memory.avoidSquares[c]||(Memory.avoidSquares[c]=[]),Memory.avoidSquares[c].push({x:a,y:b}));d||Memory.avoidSquares[c]&&_.remove(Memory.avoidSquares[c],function(c){return c.x===
a&&c.y===b})},addSign:function(a,b){Memory.signs||(Memory.signs={});b?Memory.signs[a]=b:delete Memory.signs[a]},resetMatrix:function(a){Memory.baseMatrixes[a]={}},recover:function(){_.forEach(Game.spawns,function(a){a.createCreep([MOVE,MOVE,CARRY,CARRY,CARRY,CARRY],"storer-emerg-"+a.room.name,{role:"storer",home:a.room.name})})}};require("screeps-profiler").registerObject(Commands,"Commands");module.exports=Commands;