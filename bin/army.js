var $jscomp={scope:{},findInternal:function(b,a,e){b instanceof String&&(b=String(b));for(var c=b.length,d=0;d<c;d++){var f=b[d];if(a.call(e,f,d,b))return{i:d,v:f}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(b,a,e){if(e.get||e.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[a]=e.value)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(b,a,e,c){if(a){e=$jscomp.global;b=b.split(".");for(c=0;c<b.length-1;c++){var d=b[c];d in e||(e[d]={});e=e[d]}b=b[b.length-1];c=e[b];a=a(c);a!=c&&null!=a&&$jscomp.defineProperty(e,b,{configurable:!0,writable:!0,value:a})}};
$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(a,b){return $jscomp.findInternal(this,a,b).v}},"es6-impl","es3");
var Cache=require("cache"),Utilities=require("utilities"),RoleArmyDismantler=require("role.armyDismantler"),RoleArmyHealer=require("role.armyHealer"),RoleArmyMelee=require("role.armyMelee"),RoleArmyRanged=require("role.armyRanged"),TaskHeal=require("task.heal"),TaskMeleeAttack=require("task.meleeAttack"),TaskRally=require("task.rally"),TaskRangedAttack=require("task.rangedAttack"),Army={run:function(b){var a=Memory.army[b],e=Cache.creepsInArmy("all",b),c=Game.rooms[a.attackRoom],d=a.dismantler,f=
a.healer,k=a.melee,l=a.ranged,g,h;if(!(a.scheduled&&a.scheduled>Game.time))if(c&&(h=c.find(FIND_HOSTILE_CONSTRUCTION_SITES)),a.boostRoom&&(g=Game.rooms[a.boostRoom].storage.store),0===e.length&&a.success)Game.notify("Army "+b+" operation successful!"),delete Memory.army[b];else{"preparing"===a.directive||"building"===a.directive||0!==e.length||a.success||(Game.notify("Army "+b+" operation failed, restarting."),a.directive="preparing");switch(a.directive){case "preparing":a.boostRoom?(g[RESOURCE_CATALYZED_GHODIUM_ALKALIDE]||
0)>=150*(d.maxCreeps+k.maxCreeps+l.maxCreeps+f.maxCreeps)&&(g[RESOURCE_CATALYZED_ZYNTHIUM_ACID]||0)>=30*d.units*d.maxCreeps&&(g[RESOURCE_CATALYZED_LEMERGIUM_ALKALIDE]||0)>=30*f.units*f.maxCreeps&&(a.directive="building"):a.directive="building";break;case "building":0===_.filter(e,function(b){return b.room.name!==a.buildRoom}).length&&_.filter(e,function(b){return b.room.name===a.buildRoom}).length>=d.maxCreeps+f.maxCreeps+k.maxCreeps+l.maxCreeps&&(a.directive="staging");break;case "staging":0===_.filter(e,
function(b){return b.room.name!==a.stageRoom}).length&&(a.directive="dismantle");break;case "dismantle":c&&(a.dismantle=_.filter(a.dismantle,function(a){return Game.getObjectById(a)}),0===a.dismantle.length&&(a.directive="attack"));break;case "attack":c&&!a.reinforce&&0===_.filter(c.find(FIND_HOSTILE_STRUCTURES),function(a){return!(a instanceof StructureController)&&!(a instanceof StructureRampart)&&!(a instanceof StructureKeeperLair)}).length&&0===h.length&&(a.success=!0)}if("building"===a.directive||
a.reinforce)RoleArmyDismantler.checkSpawn(b,a.portals),RoleArmyHealer.checkSpawn(b,a.portals),RoleArmyMelee.checkSpawn(b,a.portals),RoleArmyRanged.checkSpawn(b,a.portals);d={melee:{tasks:[]},ranged:{tasks:[]},heal:{tasks:_.map(_.filter(e,function(a){return a.hits<a.hitsMax}).sort(function(a,b){return b.hitsMax-b.hits-(a.hitsMax-a.hits)}),function(a){return new TaskHeal(a.id)})},rally:{tasks:[]}};if(c)switch(a.directive){case "dismantle":c=_.filter(Cache.hostilesInRoom(c),function(a){return 3>=Utilities.objectsClosestToObj(e,
a)[0].pos.getRangeTo(a)});d.ranged.tasks=_.map(c,function(a){return new TaskRangedAttack(a.id)});d.melee.tasks=_.map(c,function(a){return new TaskMeleeAttack(a.id)});break;case "attack":c=Cache.hostilesInRoom(c),d.melee.tasks=_.map(c,function(a){return new TaskMeleeAttack(a.id)}),d.ranged.tasks=_.map(c,function(a){return new TaskRangedAttack(a.id)}),d.rally.tasks=_.map(h,function(a){return new TaskRally(a.id)})}RoleArmyDismantler.assignTasks(b,a.directive,d);RoleArmyHealer.assignTasks(b,a.directive,
d);RoleArmyMelee.assignTasks(b,a.directive,d);RoleArmyRanged.assignTasks(b,a.directive,d)}}};require("screeps-profiler").registerObject(Army,"Army");module.exports=Army;