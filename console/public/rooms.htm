<b>Base Rooms</b>
<div style="white-space: nowrap; overflow-x: scroll;">
    <div ng-repeat="(name, room) in data.memory.rooms" ng-if="room.type === 'base'" ng-class="{panel: true, 'panel-primary': !room.unobservable && room.rcl && room.ttd > 1000, 'panel-warning': room.ttd <= 1000, 'panel-danger': room.unobservable || !room.rcl}" style="display: inline-block; width: 500px; margin-right: 10px; vertical-align: top;">
        <div class="panel-heading">{{name}} ({{room.region}})</div>
        <div class="panel-body">
            <div style="display: flex;">
                <div ng-if="room.unobservable">Unobservable</div>
                <div ng-if="room.rcl" style="width: max-content; white-space: nowrap;">
                    <b>RCL</b> {{room.rcl}}
                </div>
                <div ng-if="room.reservedUsername">
                    <b>Reserved</b> {{room.reservedUsername}}
                    <b>TTE</b> {{room.tte}}
                </div>
                <div ng-if="room.controller && !room.rcl">
                    <b>Unowned</b>
                </div>
                <div ng-if="room.progressTotal" class="progress" style="width: 100%; margin: 0 5px; break-after: always;">
                    <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="{{room.progress.toFixed(0)}}" aria-valuemin="0" aria-valuemax="{{room.progressTotal.toFixed(0)}}" style="width: {{(100 * room.progress / room.progressTotal).toFixed(3)}}%; white-space: nowrap; color: black;">
                        {{room.progress.toFixed(0)}}/{{room.progressTotal.toFixed(0)}} ({{(100 * room.progress / room.progressTotal).toFixed(3)}}%) {{(room.progressTotal - room.progress).toFixed(0)}} to go
                    </div>
                </div>
                <div ng-if="room.ttd" style="width: max-content; white-space: nowrap;">
                    <b>TTD</b> {{room.ttd}}
                </div>
            </div>
            <div ng-repeat="(store, storage) in room.store">
                <b>{{store}}</b> {{storage[0].amount}} <img src="https://s3.amazonaws.com/static.screeps.com/upload/mineral-icons/{{storage[0].resource}}.png" />
            </div>
            <div ng-if="room.energyCapacityAvailable">
                <div style="display: flex;">
                    <div style="width: max-content; white-space: nowrap;">
                        <b>Energy</b>
                    </div>
                    <div class="progress" style="width: 100%; margin: 0 0 0 5px; break-after: always;">
                        <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="{{room.energyAvailable.toFixed(0)}}" aria-valuemin="0" aria-valuemax="{{room.energyCapacityAvailable.toFixed(0)}}" style="width: {{(100 * room.energyAvailable / room.energyCapacityAvailable).toFixed(3)}}%; white-space: nowrap; color: black;">
                            {{room.energyAvailable.toFixed(0)}}/{{room.energyCapacityAvailable.toFixed(0)}} ({{(100 * room.energyAvailable / room.energyCapacityAvailable).toFixed(3)}}%) {{(room.energyCapacityAvailable - room.energyAvailable).toFixed(0)}} to go
                        </div>
                    </div>
                </div>
            </div>
            <div ng-if="room.constructionProgressTotal">
                <div style="display: flex;">
                    <div style="width: max-content; white-space: nowrap;">
                        <b>Construction</b>
                    </div>
                    <div class="progress" style="width: 100%; margin: 0 0 0 5px; break-after: always;">
                        <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="{{room.constructionProgress.toFixed(0)}}" aria-valuemin="0" aria-valuemax="{{room.constructionProgressTotal.toFixed(0)}}" style="width: {{(100 * room.constructionProgress / room.constructionProgressTotal).toFixed(3)}}%; white-space: nowrap; color: black;">
                            {{room.constructionProgress.toFixed(0)}}/{{room.constructionProgressTotal.toFixed(0)}} ({{(100 * room.constructionProgress / room.constructionProgressTotal).toFixed(3)}}%) {{(room.constructionProgressTotal - room.constructionProgress).toFixed(0)}} to go
                        </div>
                    </div>
                </div>
            </div>
            <div ng-if="room.towerEnergyCapacity">
                <div style="display: flex;">
                    <div style="width: max-content; white-space: nowrap;">
                        <b>Towers</b>
                    </div>
                    <div class="progress" style="width: 100%; margin: 0 0 0 5px; break-after: always;">
                        <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="{{room.towerEnergy.toFixed(0)}}" aria-valuemin="0" aria-valuemax="{{room.towerEnergyCapacity.toFixed(0)}}" style="width: {{(100 * room.towerEnergy / room.towerEnergyCapacity).toFixed(3)}}%; white-space: nowrap; color: black;">
                            {{room.towerEnergy.toFixed(0)}}/{{room.towerEnergyCapacity.toFixed(0)}} ({{(100 * room.towerEnergy / room.towerEnergyCapacity).toFixed(3)}}%) {{(room.towerEnergyCapacity - room.towerEnergy).toFixed(0)}} to go
                        </div>
                    </div>
                </div>
            </div>
            <div ng-if="room.labEnergyCapacity">
                <div style="display: flex;">
                    <div style="width: max-content; white-space: nowrap;">
                        <b>Labs</b>
                    </div>
                    <div class="progress" style="width: 100%; margin: 0 0 0 5px; break-after: always;">
                        <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="{{room.labEnergy.toFixed(0)}}" aria-valuemin="0" aria-valuemax="{{room.labEnergyCapacity.toFixed(0)}}" style="width: {{(100 * room.labEnergy / room.labEnergyCapacity).toFixed(3)}}%; white-space: nowrap; color: black;">
                            {{room.labEnergy.toFixed(0)}}/{{room.labEnergyCapacity.toFixed(0)}} ({{(100 * room.labEnergy / room.labEnergyCapacity).toFixed(3)}}%) {{(room.labEnergyCapacity - room.labEnergy).toFixed(0)}} to go
                        </div>
                    </div>
                </div>
            </div>
            <div ng-if="room.lowestWall">
                <b>Lowest Wall</b> {{room.lowestWall.hits.toFixed(0)}}
            </div>
            <div ng-repeat="source in room.source">
                <img src="https://s3.amazonaws.com/static.screeps.com/upload/mineral-icons/{{source.resource}}.png" /> {{source.amount}}<span ng-if="source.capacity">/{{source.capacity}}</span>
                <span style="width: max-content; white-space: nowrap;" ng-if="source.ttr">
                    <b>TTR</b> {{source.ttr}}
                </span>
            </div>
            <div ng-repeat="creeps in room.creeps" ng-class="{'text-danger': creeps.count === 0, 'text-warning': creeps.count < creeps.max}">
                <b>{{creeps.role}}</b> {{creeps.count}}/{{creeps.max}}
            </div>
            <div ng-repeat="creep in data.memory.creeps" ng-if="creep.room === name && creep.hits < creep.hitsMax" ng-class="{'text-warning': creep.hits / creep.hitsMax >= 0.8, 'text-danger': creep.hits / creep.hitsMax < 0.8}">
                <b>{{creep.name}}</b> {{creep.x}},{{creep.y}} {{creep.hits}}/{{creep.hitsMax}} {{(100 * creep.hits / creep.hitsMax).toFixed(0)}}%
            </div>
            <div ng-repeat="spawn in data.memory.spawns" ng-if="spawn.room === name && spawn.spawningName">
                <b>Spawning</b> {{spawn.spawningName}} {{spawn.spawningRemainingTime}}/{{spawn.spawningNeedTime}}
            </div>
            <div ng-repeat="hostile in data.memory.hostiles" ng-if="hostile.room === name" class="{'text-warning': hostile.ownerUsername === 'invader', 'text-danger': hostile.ownerUsername !== 'invader'}">
                <b>{{hostile.ownerUsername}}</b> {{hostile.x}},{{hostile.y}} {{hostile.hits}}/{{hostile.hitsMax}} {{(100 * hostile.hits / hostile.hitsMax).toFixed(0)}}%
            </div>
        </div>
    </div>
</div>
<b>Mine Rooms</b>
<div style="white-space: nowrap; overflow-x: scroll;">
    <div ng-repeat="(name, room) in data.memory.rooms" ng-if="room.type === 'mine'" ng-class="{panel: true, 'panel-primary': !room.unobservable, 'panel-danger': room.unobservable}" style="display: inline-block; width: 500px; margin-right: 10px; vertical-align: top;">
        <div class="panel-heading">{{name}} ({{room.region}}, Supporting {{room.supportRoom}})</div>
        <div class="panel-body">
            <div style="display: flex;">
                <div ng-if="room.unobservable">Unobservable</div>
                <div ng-if="room.rcl" style="width: max-content; white-space: nowrap;">
                    <b>RCL</b> {{room.rcl}}
                    <b>TTD</b> {{room.ttd}}
                </div>
                <div ng-if="room.reservedUsername">
                    <b>Reserved</b> {{room.reservedUsername}}
                    <b>TTE</b> {{room.tte}}
                </div>
                <div ng-if="!room.reservedUsername && room.controller && !room.rcl">
                    <b>Unowned</b>
                </div>
            </div>
            <div ng-repeat="(store, storage) in room.store">
                <b>{{store}}</b> {{storage[0].amount}} <img src="https://s3.amazonaws.com/static.screeps.com/upload/mineral-icons/{{storage[0].resource}}.png" />
            </div>
            <div ng-if="room.constructionProgressTotal">
                <div style="display: flex;">
                    <div style="width: max-content; white-space: nowrap;">
                        <b>Construction</b>
                    </div>
                    <div class="progress" style="width: 100%; margin: 0 0 0 5px; break-after: always;">
                        <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="{{room.constructionProgress.toFixed(0)}}" aria-valuemin="0" aria-valuemax="{{room.constructionProgressTotal.toFixed(0)}}" style="width: {{(100 * room.constructionProgress / room.constructionProgressTotal).toFixed(3)}}%; white-space: nowrap; color: black;">
                            {{room.constructionProgress.toFixed(0)}}/{{room.constructionProgressTotal.toFixed(0)}} ({{(100 * room.constructionProgress / room.constructionProgressTotal).toFixed(3)}}%) {{(room.constructionProgressTotal - room.constructionProgress).toFixed(0)}} to go
                        </div>
                    </div>
                </div>
            </div>
            <div ng-repeat="source in room.source" ng-class="{'text-muted': source.resource !== 'energy'}">
                <img src="https://s3.amazonaws.com/static.screeps.com/upload/mineral-icons/{{source.resource}}.png" /> {{source.amount}}<span ng-if="source.capacity">/{{source.capacity}}</span>
                <span style="width: max-content; white-space: nowrap;" ng-if="source.ttr">
                    <b>TTR</b> {{source.ttr}}
                </span>
            </div>
            <div ng-repeat="creeps in room.creeps" ng-class="{'text-danger': creeps.count === 0, 'text-warning': creeps.count < creeps.max}">
                <b>{{creeps.role}}</b> {{creeps.count}}/{{creeps.max}}
            </div>
            <div ng-repeat="creep in data.memory.creeps" ng-if="creep.room === name && creep.hits < creep.hitsMax" ng-class="{'text-warning': creep.hits / creep.hitsMax >= 0.8, 'text-danger': creep.hits / creep.hitsMax < 0.8}">
                <b>{{creep.name}}</b> {{creep.x}},{{creep.y}} {{creep.hits}}/{{creep.hitsMax}} {{(100 * creep.hits / creep.hitsMax).toFixed(0)}}%
            </div>
            <div ng-repeat="hostile in data.memory.hostiles" ng-if="hostile.room === name" class="{'text-warning': hostile.ownerUsername === 'invader', 'text-danger': hostile.ownerUsername !== 'invader'}">
                <b>{{hostile.ownerUsername}}</b> {{hostile.x}},{{hostile.y}} {{hostile.hits}}/{{hostile.hitsMax}} {{(100 * hostile.hits / hostile.hitsMax).toFixed(0)}}%
            </div>
        </div>
    </div>
</div>
<b>Cleanup Rooms</b>
<div style="white-space: nowrap; overflow-x: scroll;">
    <div ng-repeat="(name, room) in data.memory.rooms" ng-if="room.type === 'cleanup'" ng-class="{panel: true, 'panel-primary': !room.unobservable, 'panel-danger': room.unobservable}" style="display: inline-block; width: 500px; margin-right: 10px; vertical-align: top;">
        <div class="panel-heading">{{name}} (Supporting {{room.supportRoom}})</div>
        <div class="panel-body">
            <div style="display: flex;">
                <div ng-if="room.unobservable">Unobservable</div>
                <div ng-if="room.rcl" style="width: max-content; white-space: nowrap;">
                    <b>RCL</b> {{room.rcl}}
                    <b>TTD</b> {{room.ttd}}
                </div>
                <div ng-if="room.reservedUsername">
                    <b>Reserved</b> {{room.reservedUsername}}
                    <b>TTE</b> {{room.tte}}
                </div>
                <div ng-if="!room.reservedUsername && room.controller && !room.rcl">
                    <b>Unowned</b>
                </div>
            </div>
            <div ng-repeat="(store, storage) in room.store">
                <b>{{store}}</b> {{storage[0].amount}} <img src="https://s3.amazonaws.com/static.screeps.com/upload/mineral-icons/{{storage[0].resource}}.png" />
            </div>
            <div ng-repeat="creeps in room.creeps" ng-class="{'text-danger': creeps.count === 0, 'text-warning': creeps.count < creeps.max}">
                <b>{{creeps.role}}</b> {{creeps.count}}/{{creeps.max}}
            </div>
            <div ng-repeat="creep in data.memory.creeps" ng-if="creep.room === name && creep.hits < creep.hitsMax" ng-class="{'text-warning': creep.hits / creep.hitsMax >= 0.8, 'text-danger': creep.hits / creep.hitsMax < 0.8}">
                <b>{{creep.name}}</b> {{creep.x}},{{creep.y}} {{creep.hits}}/{{creep.hitsMax}} {{(100 * creep.hits / creep.hitsMax).toFixed(0)}}%
            </div>
            <div ng-repeat="hostile in data.memory.hostiles" ng-if="hostile.room === name" class="{'text-warning': hostile.ownerUsername === 'invader', 'text-danger': hostile.ownerUsername !== 'invader'}">
                <b>{{hostile.ownerUsername}}</b> {{hostile.x}},{{hostile.y}} {{hostile.hits}}/{{hostile.hitsMax}} {{(100 * hostile.hits / hostile.hitsMax).toFixed(0)}}%
            </div>
        </div>
    </div>
</div>
<b>Unknown Rooms</b>
<div style="white-space: nowrap; overflow-x: scroll;">
    <div ng-repeat="(name, room) in data.memory.rooms" ng-if="['base', 'mine', 'cleanup'].indexOf(room.type) === -1" ng-class="{panel: true, 'panel-primary': !room.unobservable, 'panel-danger': room.unobservable}" style="display: inline-block; width: 500px; margin-right: 10px; vertical-align: top;">
        <div class="panel-heading">{{name}}</div>
        <div class="panel-body" ng-if="room">
            <div style="display: flex;">
                <div ng-if="room.unobservable">Unobservable</div>
                <div ng-if="room.rcl" style="width: max-content; white-space: nowrap;">
                    <b>RCL</b> {{room.rcl}}
                    <b>TTD</b> {{room.ttd}}
                </div>
                <div ng-if="room.reservedUsername">
                    <b>Reserved</b> {{room.reservedUsername}}
                    <b>TTE</b> {{room.tte}}
                </div>
                <div ng-if="!room.reservedUsername && room.controller && !room.rcl">
                    <b>Unowned</b>
                </div>
            </div>
            <div ng-repeat="creeps in room.creeps" ng-class="{'text-danger': creeps.count === 0, 'text-warning': creeps.count < creeps.max}">
                <b>{{creeps.role}}</b> {{creeps.count}}/{{creeps.max}}
            </div>
            <div ng-repeat="creep in data.memory.creeps" ng-if="creep.room === name && creep.hits < creep.hitsMax" ng-class="{'text-warning': creep.hits / creep.hitsMax >= 0.8, 'text-danger': creep.hits / creep.hitsMax < 0.8}">
                <b>{{creep.name}}</b> {{creep.x}},{{creep.y}} {{creep.hits}}/{{creep.hitsMax}} {{(100 * creep.hits / creep.hitsMax).toFixed(0)}}%
            </div>
            <div ng-repeat="hostile in data.memory.hostiles" ng-if="hostile.room === name" class="{'text-warning': hostile.ownerUsername === 'invader', 'text-danger': hostile.ownerUsername !== 'invader'}">
                <b>{{hostile.ownerUsername}}</b> {{hostile.x}},{{hostile.y}} {{hostile.hits}}/{{hostile.hitsMax}} {{(100 * hostile.hits / hostile.hitsMax).toFixed(0)}}%
            </div>
        </div>
    </div>
</div>
<b>Armies</b>
<div style="white-space: nowrap; overflow-x: scroll;">
    <div ng-repeat="(name, army) in data.memory.army" ng-class="{panel: true, 'panel-warning': army.directive === 'staging', 'panel-danger': ['dismantle', 'attack'].indexOf(army.directive) !== -1}">
        <div class="panel-heading">{{name}}</div>
        <div class="panel-body">
            <div ng-if="army.boostRoom">
                <b>Boost Room</b> {{army.boostRoom}}
            </div>
            <div ng-if="army.buildRoom">
                <b>Build Room</b> {{army.buildRoom}}
            </div>
            <div ng-if="army.stageRoom">
                <b>Staging Room</b> {{army.stagingRoom}}
            </div>
            <div ng-if="army.attackRoom">
                <b>Attack Room</b> {{army.attackRoom}}
            </div>
            <div ng-if="army.dismantle">
                <b>Initial structures to dismantle:</b> {{army.dismantle}}
            </div>
            <div ng-if="army.structures">
                <b>Complete structures to dismantle:</b> {{army.structures}}
            </div>
            <div ng-if="army.constructionSites">
                <b>Initial structures to dismantle:</b> {{army.constructionSites}}
            </div>
            <div ng-repeat="creeps in army.creeps" ng-class="{'text-danger': creeps.count === 0, 'text-warning': creeps.count < creeps.max}">
                <b>{{creeps.role}}</b> {{creeps.count}}/{{creeps.max}}
            </div>
            <div ng-repeat="creep in data.memory.creeps" ng-if="creep.army === name && creep.hits < creep.hitsMax" ng-class="{'text-warning': creep.hits / creep.hitsMax >= 0.8, 'text-danger': creep.hits / creep.hitsMax < 0.8}">
                <b>{{creep.name}}</b> {{creep.x}},{{creep.y}} {{creep.hits}}/{{creep.hitsMax}} {{(100 * creep.hits / creep.hitsMax).toFixed(0)}}%
            </div>
        </div>
    </div>
</div>
